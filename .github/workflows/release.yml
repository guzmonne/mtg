name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  update-version:
    name: Update Version and Push
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Update Cargo.toml version
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        sed -i "s/^version = \".*\"/version = \"$VERSION\"/" crates/mtg/Cargo.toml
        echo "Updated version to $VERSION in crates/mtg/Cargo.toml"

    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add crates/mtg/Cargo.toml
        git commit -m "chore: bump version to ${{ steps.get_version.outputs.version }}" || exit 0

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: master

  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: update-version
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: mtg
            asset_name: mtg-linux-x86_64
          
          # macOS Intel
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: mtg
            asset_name: mtg-macos-x86_64
          
          # macOS Apple Silicon
          - target: aarch64-apple-darwin
            os: macos-latest
            artifact_name: mtg
            asset_name: mtg-macos-arm64
          
          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: mtg.exe
            asset_name: mtg-windows-x86_64.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-release-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-release-${{ matrix.target }}-
          ${{ runner.os }}-cargo-release-
          ${{ runner.os }}-cargo-

    - name: Build release binary
      run: cargo build --release --bin mtg --target ${{ matrix.target }} --verbose

    - name: Prepare artifact
      shell: bash
      run: |
        mkdir -p artifacts
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}
          chmod +x artifacts/${{ matrix.asset_name }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: artifacts/${{ matrix.asset_name }}
        if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [update-version, build]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate changelog
      id: changelog
      run: |
        VERSION=${{ needs.update-version.outputs.version }}
        
        # Get the previous tag
        PREV_TAG=$(git tag --sort=-version:refname | grep -v "v$VERSION" | head -n 1)
        
        if [ -z "$PREV_TAG" ]; then
          echo "No previous tag found, using all commits"
          COMMITS=$(git log --oneline --pretty=format:"- %s" | head -20)
        else
          echo "Previous tag: $PREV_TAG"
          COMMITS=$(git log --oneline --pretty=format:"- %s" ${PREV_TAG}..HEAD)
        fi
        
        # Create changelog
        CHANGELOG="## Changes in v$VERSION

$COMMITS

## Downloads
- **Linux (x86_64)**: \`mtg-linux-x86_64\`
- **macOS (Intel)**: \`mtg-macos-x86_64\`
- **macOS (Apple Silicon)**: \`mtg-macos-arm64\`
- **Windows (x86_64)**: \`mtg-windows-x86_64.exe\`

## Installation
Download the appropriate binary for your platform and add it to your PATH."

        # Save changelog to file and output
        echo "$CHANGELOG" > changelog.md
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.update-version.outputs.version }}
        name: Release v${{ needs.update-version.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        files: |
          artifacts/mtg-linux-x86_64/mtg-linux-x86_64
          artifacts/mtg-macos-x86_64/mtg-macos-x86_64
          artifacts/mtg-macos-arm64/mtg-macos-arm64
          artifacts/mtg-windows-x86_64.exe/mtg-windows-x86_64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}